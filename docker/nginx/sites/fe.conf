server {

    listen 80;
    listen [::]:80;

    # For https
    # listen 443 ssl;
    # listen [::]:443 ssl ipv6only=on;
    # ssl_certificate /etc/nginx/ssl/default.crt;
    # ssl_certificate_key /etc/nginx/ssl/default.key;

    proxy_read_timeout 300;
    proxy_connect_timeout 300;
    proxy_send_timeout 300; 

    # This can be served dirrectly to the compilied frontend files based on what path they are mapped
    # as well as volume mapping for the fe app on the nginx service in docker-compose.yml.
    # Or we can serve the nginx-es of multiple FE apps.
    
    server_name rust-api.test; 
    # root /app/dist;
    # index index.html index.htm;

    # location / {
    #     try_files $uri $uri/ /index.html;
    # }
    
	location / {
        proxy_pass http://fe:8080;
        proxy_redirect off;
        proxy_buffer_size   128k;
        proxy_buffers   4 256k;
        proxy_busy_buffers_size   256k;

        # add_header X-Frame-Options "Deny";
        # add_header X-XSS-Protection 1;
        # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";
        # add_header X-Content-Type-Options "nosniff";
        # add_header Cache-Control "no-cache, no-store, must-revalidate";
        
		break;
    }

    location /api/ {
        proxy_pass http://api:9900;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;

		# set $cors '';
		#
		# add_header 'Access-Control-Allow-Credentials' 'true' always;
		# if ($cors = 'true') {
		# 	add_header 'Access-Control-Allow-Origin' "$http_origin" always;
		# 	add_header 'Access-Control-Allow-Credentials' 'true' always;
		# 	# add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
		# 	# add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Set-Cookie,Keep-Alive,Origin,User-Agent,X-Requested-With' always;
		# 	# required to be able to read Authorization header in frontend
		# 	#add_header 'Access-Control-Expose-Headers' 'Authorization' always;
		# }

		break;
    }


	location ~ /\.ht {
        deny all;
    }

    location /.well-known/acme-challenge/ {
        root /var/www/letsencrypt/;
        log_not_found off;
    }

    error_log /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;
}
